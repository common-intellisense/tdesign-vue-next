{
  "name": "TDialog",
  "props": {
    "attach": {
      "description": "对话框挂载的节点。数据类型为 String 时，会被当作选择器处理，进行节点查询。示例：'body' 或 () => document.body。TS 类型：AttachNode。通用类型定义",
      "description_zh": "对话框挂载的节点。数据类型为 String 时，会被当作选择器处理，进行节点查询。示例：'body' 或 () => document.body。TS 类型：AttachNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Function",
      "required": false,
      "version": ""
    },
    "body": {
      "description": "对话框内容。TS 类型：string | TNode。通用类型定义",
      "description_zh": "对话框内容。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "cancelBtn": {
      "description": "取消按钮，可自定义。值为 null 则不显示取消按钮。值类型为字符串，则表示自定义按钮文本，值类型为 Object 则表示透传 Button 组件属性。使用 TNode 自定义按钮时，需自行控制取消事件。TS 类型：string | ButtonProps | TNode | null，Button API Documents。通用类型定义。详细类型定义",
      "description_zh": "取消按钮，可自定义。值为 null 则不显示取消按钮。值类型为字符串，则表示自定义按钮文本，值类型为 Object 则表示透传 Button 组件属性。使用 TNode 自定义按钮时，需自行控制取消事件。TS 类型：string | ButtonProps | TNode | null，Button API Documents。通用类型定义。详细类型定义",
      "default": "-",
      "value": "",
      "type": "String / Object / Slot / Function",
      "required": false,
      "version": ""
    },
    "closeBtn": {
      "description": "关闭按钮，可以自定义。值为 true 显示默认关闭按钮，值为 false 不显示关闭按钮。值类型为 string 则直接显示值，如：“关闭”。值类型为 TNode，则表示呈现自定义按钮示例。TS 类型：string | boolean | TNode。通用类型定义",
      "description_zh": "关闭按钮，可以自定义。值为 true 显示默认关闭按钮，值为 false 不显示关闭按钮。值类型为 string 则直接显示值，如：“关闭”。值类型为 TNode，则表示呈现自定义按钮示例。TS 类型：string | boolean | TNode。通用类型定义",
      "default": "true",
      "value": "",
      "type": "String / Boolean / Slot / Function",
      "required": false,
      "version": ""
    },
    "closeOnEscKeydown": {
      "description": "按下 ESC 时是否触发对话框关闭事件",
      "description_zh": "按下 ESC 时是否触发对话框关闭事件",
      "default": "true",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "closeOnOverlayClick": {
      "description": "点击蒙层时是否触发关闭事件",
      "description_zh": "点击蒙层时是否触发关闭事件",
      "default": "true",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "confirmBtn": {
      "description": "确认按钮。值为 null 则不显示确认按钮。值类型为字符串，则表示自定义按钮文本，值类型为 Object 则表示透传 Button 组件属性。使用 TNode 自定义按钮时，需自行控制确认事件。TS 类型：string | ButtonProps | TNode | null。通用类型定义",
      "description_zh": "确认按钮。值为 null 则不显示确认按钮。值类型为字符串，则表示自定义按钮文本，值类型为 Object 则表示透传 Button 组件属性。使用 TNode 自定义按钮时，需自行控制确认事件。TS 类型：string | ButtonProps | TNode | null。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Object / Slot / Function",
      "required": false,
      "version": ""
    },
    "confirmLoading": {
      "description": "确认按钮加载状态",
      "description_zh": "确认按钮加载状态",
      "default": "undefined",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "confirmOnEnter": {
      "description": "是否在按下回车键时，触发确认事件",
      "description_zh": "是否在按下回车键时，触发确认事件",
      "default": "-",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "default": {
      "description": "对话框内容，同 body。TS 类型：string | TNode。通用类型定义",
      "description_zh": "对话框内容，同 body。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "destroyOnClose": {
      "description": "是否在关闭弹框的时候销毁子元素",
      "description_zh": "是否在关闭弹框的时候销毁子元素",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "draggable": {
      "description": "对话框是否可以拖拽（仅在非模态对话框时有效）",
      "description_zh": "对话框是否可以拖拽（仅在非模态对话框时有效）",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "footer": {
      "description": "底部操作栏，默认会有“确认”和“取消”两个按钮。值为 true 显示默认操作按钮，值为 false 不显示任何内容，值类型为 Function 表示自定义底部内容。TS 类型：boolean | TNode。通用类型定义",
      "description_zh": "底部操作栏，默认会有“确认”和“取消”两个按钮。值为 true 显示默认操作按钮，值为 false 不显示任何内容，值类型为 Function 表示自定义底部内容。TS 类型：boolean | TNode。通用类型定义",
      "default": "true",
      "value": "",
      "type": "Boolean / Slot / Function",
      "required": false,
      "version": ""
    },
    "header": {
      "description": "头部内容。值为 true 显示空白头部，值为 false 不显示任何内容，值类型为 string 则直接显示值，值类型为 Function 表示自定义头部内容。TS 类型：string | boolean | TNode。通用类型定义",
      "description_zh": "头部内容。值为 true 显示空白头部，值为 false 不显示任何内容，值类型为 string 则直接显示值，值类型为 Function 表示自定义头部内容。TS 类型：string | boolean | TNode。通用类型定义",
      "default": "true",
      "value": "",
      "type": "String / Boolean / Slot / Function",
      "required": false,
      "version": ""
    },
    "mode": {
      "description": "对话框类型，有 3 种：模态对话框、非模态对话框、全屏对话框。弹出「模态对话框」时，只能操作对话框里面的内容，不能操作其他内容。弹出「非模态对话框」时，则可以操作页面内所有内容。「普通对话框」是指没有脱离文档流的对话框，可以在这个基础上开发更多的插件。可选项：modal/modeless/full-screen",
      "description_zh": "对话框类型，有 3 种：模态对话框、非模态对话框、全屏对话框。弹出「模态对话框」时，只能操作对话框里面的内容，不能操作其他内容。弹出「非模态对话框」时，则可以操作页面内所有内容。「普通对话框」是指没有脱离文档流的对话框，可以在这个基础上开发更多的插件。可选项：modal/modeless/full-screen",
      "default": "modal",
      "value": "",
      "type": "modal/modeless/full-screen",
      "required": false,
      "version": ""
    },
    "placement": {
      "description": "对话框位置，内置两种：垂直水平居中显示 和 靠近顶部（top:20%）显示。默认情况，为避免贴顶或贴底，顶部和底部距离最小为 48px，可通过调整 top 覆盖默认大小。可选项：top/center",
      "description_zh": "对话框位置，内置两种：垂直水平居中显示 和 靠近顶部（top:20%）显示。默认情况，为避免贴顶或贴底，顶部和底部距离最小为 48px，可通过调整 top 覆盖默认大小。可选项：top/center",
      "default": "top",
      "value": "",
      "type": "top/center",
      "required": false,
      "version": ""
    },
    "preventScrollThrough": {
      "description": "防止滚动穿透",
      "description_zh": "防止滚动穿透",
      "default": "true",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "showInAttachedElement": {
      "description": "仅在挂载元素中显示抽屉，默认在浏览器可视区域显示。父元素需要有定位属性，如：position: relative",
      "description_zh": "仅在挂载元素中显示抽屉，默认在浏览器可视区域显示。父元素需要有定位属性，如：position: relative",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "showOverlay": {
      "description": "是否显示遮罩层",
      "description_zh": "是否显示遮罩层",
      "default": "true",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "theme": {
      "description": "对话框风格。可选项：default/info/warning/danger/success",
      "description_zh": "对话框风格。可选项：default/info/warning/danger/success",
      "default": "default",
      "value": "",
      "type": "String",
      "required": false,
      "version": ""
    },
    "top": {
      "description": "用于弹框具体窗口顶部的距离，优先级大于 placement",
      "description_zh": "用于弹框具体窗口顶部的距离，优先级大于 placement",
      "default": "-",
      "value": "",
      "type": "String / Number",
      "required": false,
      "version": ""
    },
    "visible": {
      "description": "控制对话框是否显示",
      "description_zh": "控制对话框是否显示",
      "default": "-",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "width": {
      "description": "对话框宽度，示例：320, '500px', '80%'",
      "description_zh": "对话框宽度，示例：320, '500px', '80%'",
      "default": "-",
      "value": "",
      "type": "String / Number",
      "required": false,
      "version": ""
    },
    "zIndex": {
      "description": "对话框层级，Web 侧样式默认为 2500，移动端和小程序样式默认为 1500",
      "description_zh": "对话框层级，Web 侧样式默认为 2500，移动端和小程序样式默认为 1500",
      "default": "-",
      "value": "",
      "type": "Number",
      "required": false,
      "version": ""
    },
    "onCancel": {
      "description": "TS 类型：(context: { e: MouseEvent }) => void如果“取消”按钮存在，则点击“取消”按钮时触发，同时触发关闭事件",
      "description_zh": "TS 类型：(context: { e: MouseEvent }) => void如果“取消”按钮存在，则点击“取消”按钮时触发，同时触发关闭事件",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onClose": {
      "description": "TS 类型：(context: DialogCloseContext) => void关闭事件，点击取消按钮、点击关闭按钮、点击蒙层、按下 ESC 等场景下触发。详细类型定义。type DialogEventSource = 'esc' | 'close-btn' | 'cancel' | 'overlay'interface DialogCloseContext { trigger: DialogEventSource; e: MouseEvent | KeyboardEvent }",
      "description_zh": "TS 类型：(context: DialogCloseContext) => void关闭事件，点击取消按钮、点击关闭按钮、点击蒙层、按下 ESC 等场景下触发。详细类型定义。type DialogEventSource = 'esc' | 'close-btn' | 'cancel' | 'overlay'interface DialogCloseContext { trigger: DialogEventSource; e: MouseEvent | KeyboardEvent }",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onCloseBtnClick": {
      "description": "TS 类型：(context: { e: MouseEvent }) => void点击右上角关闭按钮时触发",
      "description_zh": "TS 类型：(context: { e: MouseEvent }) => void点击右上角关闭按钮时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onClosed": {
      "description": "TS 类型：() => void对话框消失动画效果结束后触发",
      "description_zh": "TS 类型：() => void对话框消失动画效果结束后触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onConfirm": {
      "description": "TS 类型：(context: { e: MouseEvent | KeyboardEvent }) => void如果“确认”按钮存在，则点击“确认”按钮时触发，或者键盘按下回车键时触发",
      "description_zh": "TS 类型：(context: { e: MouseEvent | KeyboardEvent }) => void如果“确认”按钮存在，则点击“确认”按钮时触发，或者键盘按下回车键时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onEscKeydown": {
      "description": "TS 类型：(context: { e: KeyboardEvent }) => void按下 ESC 时触发事件",
      "description_zh": "TS 类型：(context: { e: KeyboardEvent }) => void按下 ESC 时触发事件",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onOpened": {
      "description": "TS 类型：() => void对话框弹出动画效果结束后触发",
      "description_zh": "TS 类型：() => void对话框弹出动画效果结束后触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onOverlayClick": {
      "description": "TS 类型：(context: { e: MouseEvent }) => void如果蒙层存在，点击蒙层时触发",
      "description_zh": "TS 类型：(context: { e: MouseEvent }) => void如果蒙层存在，点击蒙层时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    }
  },
  "link": "https://tdesign.tencent.com/vue/components/dialog",
  "link_zh": "https://tdesign.tencent.com/vue/components/dialog",
  "typeDetail": {},
  "events": [
    {
      "name": "cancel",
      "description": "如果“取消”按钮存在，则点击“取消”按钮时触发，同时触发关闭事件",
      "params": "(context: { e: MouseEvent })",
      "description_zh": "如果“取消”按钮存在，则点击“取消”按钮时触发，同时触发关闭事件"
    },
    {
      "name": "close",
      "description": "关闭事件，点击取消按钮、点击关闭按钮、点击蒙层、按下 ESC 等场景下触发。详细类型定义。type DialogEventSource = 'esc' | 'close-btn' | 'cancel' | 'overlay'interface DialogCloseContext { trigger: DialogEventSource; e: MouseEvent | KeyboardEvent }",
      "params": "(context: DialogCloseContext)",
      "description_zh": "关闭事件，点击取消按钮、点击关闭按钮、点击蒙层、按下 ESC 等场景下触发。详细类型定义。type DialogEventSource = 'esc' | 'close-btn' | 'cancel' | 'overlay'interface DialogCloseContext { trigger: DialogEventSource; e: MouseEvent | KeyboardEvent }"
    },
    {
      "name": "close-btn-click",
      "description": "点击右上角关闭按钮时触发",
      "params": "(context: { e: MouseEvent })",
      "description_zh": "点击右上角关闭按钮时触发"
    },
    {
      "name": "closed",
      "description": "对话框消失动画效果结束后触发",
      "params": "-",
      "description_zh": "对话框消失动画效果结束后触发"
    },
    {
      "name": "confirm",
      "description": "如果“确认”按钮存在，则点击“确认”按钮时触发，或者键盘按下回车键时触发",
      "params": "(context: { e: MouseEvent | KeyboardEvent })",
      "description_zh": "如果“确认”按钮存在，则点击“确认”按钮时触发，或者键盘按下回车键时触发"
    },
    {
      "name": "esc-keydown",
      "description": "按下 ESC 时触发事件",
      "params": "(context: { e: KeyboardEvent })",
      "description_zh": "按下 ESC 时触发事件"
    },
    {
      "name": "opened",
      "description": "对话框弹出动画效果结束后触发",
      "params": "-",
      "description_zh": "对话框弹出动画效果结束后触发"
    },
    {
      "name": "overlay-click",
      "description": "如果蒙层存在，点击蒙层时触发",
      "params": "(context: { e: MouseEvent })",
      "description_zh": "如果蒙层存在，点击蒙层时触发"
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Dialog"
}
