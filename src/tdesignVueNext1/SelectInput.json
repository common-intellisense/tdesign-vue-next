{
  "name": "TSelectInput",
  "props": {
    "allowInput": {
      "description": "是否允许输入",
      "description_zh": "是否允许输入",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "autoWidth": {
      "description": "宽度随内容自适应",
      "description_zh": "宽度随内容自适应",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "autofocus": {
      "description": "自动聚焦",
      "description_zh": "自动聚焦",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "borderless": {
      "description": "无边框模式",
      "description_zh": "无边框模式",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "clearable": {
      "description": "是否可清空",
      "description_zh": "是否可清空",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "collapsedItems": {
      "description": "标签过多的情况下，折叠项内容，默认为 +N。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义。value 表示所有标签值，collapsedSelectedItems 表示折叠标签值，count 表示折叠的数量，onClose 表示移除标签的事件回调。TS 类型：TNode<{ value: SelectInputValue; collapsedSelectedItems: SelectInputValue; count: number; onClose: (context: { index: number, e?: MouseEvent }) => void }>。通用类型定义",
      "description_zh": "标签过多的情况下，折叠项内容，默认为 +N。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义。value 表示所有标签值，collapsedSelectedItems 表示折叠标签值，count 表示折叠的数量，onClose 表示移除标签的事件回调。TS 类型：TNode<{ value: SelectInputValue; collapsedSelectedItems: SelectInputValue; count: number; onClose: (context: { index: number, e?: MouseEvent }) => void }>。通用类型定义",
      "default": "-",
      "value": "",
      "type": "Slot / Function",
      "required": false,
      "version": ""
    },
    "disabled": {
      "description": "是否禁用",
      "description_zh": "是否禁用",
      "default": "-",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "inputProps": {
      "description": "透传 Input 输入框组件全部属性。TS 类型：InputProps，Input API Documents。详细类型定义",
      "description_zh": "透传 Input 输入框组件全部属性。TS 类型：InputProps，Input API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "inputValue": {
      "description": "输入框的值。支持语法糖 .sync。TS 类型：string",
      "description_zh": "输入框的值。支持语法糖 .sync。TS 类型：string",
      "default": "-",
      "value": "",
      "type": "String / Number",
      "required": false,
      "version": ""
    },
    "defaultInputValue": {
      "description": "输入框的值。非受控属性。TS 类型：string",
      "description_zh": "输入框的值。非受控属性。TS 类型：string",
      "default": "-",
      "value": "",
      "type": "String / Number",
      "required": false,
      "version": ""
    },
    "keys": {
      "description": "定义字段别名，示例：{ label: 'text', value: 'id', children: 'list' }。TS 类型：SelectInputKeys interface SelectInputKeys { label?: string; value?: string; children?: string }。详细类型定义",
      "description_zh": "定义字段别名，示例：{ label: 'text', value: 'id', children: 'list' }。TS 类型：SelectInputKeys interface SelectInputKeys { label?: string; value?: string; children?: string }。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "label": {
      "description": "左侧文本。TS 类型：string | TNode。通用类型定义",
      "description_zh": "左侧文本。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "loading": {
      "description": "是否处于加载状态",
      "description_zh": "是否处于加载状态",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "minCollapsedNum": {
      "description": "最小折叠数量，用于标签数量过多的情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠",
      "description_zh": "最小折叠数量，用于标签数量过多的情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠",
      "default": "0",
      "value": "",
      "type": "Number",
      "required": false,
      "version": ""
    },
    "multiple": {
      "description": "是否为多选模式，默认为单选",
      "description_zh": "是否为多选模式，默认为单选",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "panel": {
      "description": "下拉框内容，可完全自定义。TS 类型：string | TNode。通用类型定义",
      "description_zh": "下拉框内容，可完全自定义。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "placeholder": {
      "description": "占位符",
      "description_zh": "占位符",
      "default": "-",
      "value": "",
      "type": "String",
      "required": false,
      "version": ""
    },
    "popupProps": {
      "description": "透传 Popup 浮层组件全部属性。TS 类型：PopupProps，Popup API Documents。详细类型定义",
      "description_zh": "透传 Popup 浮层组件全部属性。TS 类型：PopupProps，Popup API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "popupVisible": {
      "description": "是否显示下拉框。支持语法糖 .sync",
      "description_zh": "是否显示下拉框。支持语法糖 .sync",
      "default": "-",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "defaultPopupVisible": {
      "description": "是否显示下拉框。非受控属性",
      "description_zh": "是否显示下拉框。非受控属性",
      "default": "-",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "readonly": {
      "description": "只读状态，值为真会隐藏输入框，且无法打开下拉框",
      "description_zh": "只读状态，值为真会隐藏输入框，且无法打开下拉框",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "reserveKeyword": {
      "description": "多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词",
      "description_zh": "多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "status": {
      "description": "输入框状态。可选项：default/success/warning/error",
      "description_zh": "输入框状态。可选项：default/success/warning/error",
      "default": "default",
      "value": "",
      "type": "default/success/warning/error",
      "required": false,
      "version": ""
    },
    "suffix": {
      "description": "后置图标前的后置内容。TS 类型：string | TNode。通用类型定义",
      "description_zh": "后置图标前的后置内容。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "suffixIcon": {
      "description": "组件后置图标。TS 类型：TNode。通用类型定义",
      "description_zh": "组件后置图标。TS 类型：TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "Slot / Function",
      "required": false,
      "version": ""
    },
    "tag": {
      "description": "多选场景下，自定义选中标签的内部内容。注意和 valueDisplay 区分，valueDisplay 是用来定义全部标签内容，而非某一个标签。TS 类型：string | TNode<{ value: string | number }>。通用类型定义",
      "description_zh": "多选场景下，自定义选中标签的内部内容。注意和 valueDisplay 区分，valueDisplay 是用来定义全部标签内容，而非某一个标签。TS 类型：string | TNode<{ value: string | number }>。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "tagInputProps": {
      "description": "透传 TagInput 组件全部属性。TS 类型：TagInputProps，TagInput API Documents。详细类型定义",
      "description_zh": "透传 TagInput 组件全部属性。TS 类型：TagInputProps，TagInput API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "tagProps": {
      "description": "透传 Tag 标签组件全部属性。TS 类型：TagProps，Tag API Documents。详细类型定义",
      "description_zh": "透传 Tag 标签组件全部属性。TS 类型：TagProps，Tag API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "tips": {
      "description": "输入框下方提示文本，会根据不同的 status 呈现不同的样式。TS 类型：string | TNode。通用类型定义",
      "description_zh": "输入框下方提示文本，会根据不同的 status 呈现不同的样式。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "value": {
      "description": "全部标签值。值为数组表示多个标签，值为非数组表示单个数值。TS 类型：SelectInputValue type SelectInputValue = string | number | boolean | Date | Object | Array<any> | Array<SelectInputValue>。详细类型定义",
      "description_zh": "全部标签值。值为数组表示多个标签，值为非数组表示单个数值。TS 类型：SelectInputValue type SelectInputValue = string | number | boolean | Date | Object | Array<any> | Array<SelectInputValue>。详细类型定义",
      "default": "undefined",
      "value": "",
      "type": "String / Number / Boolean / Object / Array / Date",
      "required": false,
      "version": ""
    },
    "valueDisplay": {
      "description": "自定义值呈现的全部内容，参数为所有标签的值。TS 类型：string | TNode<{ value: TagInputValue; onClose: (index: number, item?: any) => void }>。通用类型定义",
      "description_zh": "自定义值呈现的全部内容，参数为所有标签的值。TS 类型：string | TNode<{ value: TagInputValue; onClose: (index: number, item?: any) => void }>。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "onBlur": {
      "description": "TS 类型：(value: SelectInputValue, context: SelectInputBlurContext) => void失去焦点时触发，context.inputValue 表示输入框的值；context.tagInputValue 表示标签输入框的值。详细类型定义。type SelectInputBlurContext = PopupVisibleChangeContext & { inputValue: string; tagInputValue?: TagInputValue; }",
      "description_zh": "TS 类型：(value: SelectInputValue, context: SelectInputBlurContext) => void失去焦点时触发，context.inputValue 表示输入框的值；context.tagInputValue 表示标签输入框的值。详细类型定义。type SelectInputBlurContext = PopupVisibleChangeContext & { inputValue: string; tagInputValue?: TagInputValue; }",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onClear": {
      "description": "TS 类型：(context: { e: MouseEvent }) => void清空按钮点击时触发",
      "description_zh": "TS 类型：(context: { e: MouseEvent }) => void清空按钮点击时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onEnter": {
      "description": "TS 类型：(value: SelectInputValue, context: { e: KeyboardEvent; inputValue: string; tagInputValue?: TagInputValue }) => void按键按下 Enter 时触发",
      "description_zh": "TS 类型：(value: SelectInputValue, context: { e: KeyboardEvent; inputValue: string; tagInputValue?: TagInputValue }) => void按键按下 Enter 时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onFocus": {
      "description": "TS 类型：(value: SelectInputValue, context: SelectInputFocusContext) => void聚焦时触发。详细类型定义。interface SelectInputFocusContext { inputValue: string; tagInputValue?: TagInputValue; e: FocusEvent }",
      "description_zh": "TS 类型：(value: SelectInputValue, context: SelectInputFocusContext) => void聚焦时触发。详细类型定义。interface SelectInputFocusContext { inputValue: string; tagInputValue?: TagInputValue; e: FocusEvent }",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onInputChange": {
      "description": "TS 类型：(value: string, context?: SelectInputValueChangeContext) => void输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发等。详细类型定义。interface SelectInputValueChangeContext { e?: Event | InputEvent | MouseEvent | FocusEvent | KeyboardEvent | CompositionEvent; trigger: 'input' | 'clear' | 'blur' | 'focus' | 'initial' | 'change' }",
      "description_zh": "TS 类型：(value: string, context?: SelectInputValueChangeContext) => void输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发等。详细类型定义。interface SelectInputValueChangeContext { e?: Event | InputEvent | MouseEvent | FocusEvent | KeyboardEvent | CompositionEvent; trigger: 'input' | 'clear' | 'blur' | 'focus' | 'initial' | 'change' }",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onMouseenter": {
      "description": "TS 类型：(context: { e: MouseEvent }) => void进入输入框时触发",
      "description_zh": "TS 类型：(context: { e: MouseEvent }) => void进入输入框时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onMouseleave": {
      "description": "TS 类型：(context: { e: MouseEvent }) => void离开输入框时触发",
      "description_zh": "TS 类型：(context: { e: MouseEvent }) => void离开输入框时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onPaste": {
      "description": "TS 类型：(context: { e: ClipboardEvent; pasteValue: string }) => void粘贴事件，pasteValue 表示粘贴板的内容",
      "description_zh": "TS 类型：(context: { e: ClipboardEvent; pasteValue: string }) => void粘贴事件，pasteValue 表示粘贴板的内容",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onPopupVisibleChange": {
      "description": "TS 类型：(visible: boolean, context: PopupVisibleChangeContext) => void下拉框显示或隐藏时触发。详细类型定义。import { PopupVisibleChangeContext } from '@Popup'",
      "description_zh": "TS 类型：(visible: boolean, context: PopupVisibleChangeContext) => void下拉框显示或隐藏时触发。详细类型定义。import { PopupVisibleChangeContext } from '@Popup'",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onTagChange": {
      "description": "TS 类型：(value: TagInputValue, context: SelectInputChangeContext) => void值变化时触发，参数 context.trigger 表示数据变化的触发来源；context.index 指当前变化项的下标；context.item 指当前变化项；context.e 表示事件参数。详细类型定义。type SelectInputChangeContext = TagInputChangeContext",
      "description_zh": "TS 类型：(value: TagInputValue, context: SelectInputChangeContext) => void值变化时触发，参数 context.trigger 表示数据变化的触发来源；context.index 指当前变化项的下标；context.item 指当前变化项；context.e 表示事件参数。详细类型定义。type SelectInputChangeContext = TagInputChangeContext",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    }
  },
  "link": "https://tdesign.tencent.com/vue/components/select-input",
  "link_zh": "https://tdesign.tencent.com/vue/components/select-input",
  "typeDetail": {},
  "events": [
    {
      "name": "blur",
      "description": "失去焦点时触发，context.inputValue 表示输入框的值；context.tagInputValue 表示标签输入框的值。详细类型定义。type SelectInputBlurContext = PopupVisibleChangeContext & { inputValue: string; tagInputValue?: TagInputValue; }",
      "params": "(value: SelectInputValue, context: SelectInputBlurContext)",
      "description_zh": "失去焦点时触发，context.inputValue 表示输入框的值；context.tagInputValue 表示标签输入框的值。详细类型定义。type SelectInputBlurContext = PopupVisibleChangeContext & { inputValue: string; tagInputValue?: TagInputValue; }"
    },
    {
      "name": "clear",
      "description": "清空按钮点击时触发",
      "params": "(context: { e: MouseEvent })",
      "description_zh": "清空按钮点击时触发"
    },
    {
      "name": "enter",
      "description": "按键按下 Enter 时触发",
      "params": "(value: SelectInputValue, context: { e: KeyboardEvent; inputValue: string; tagInputValue?: TagInputValue })",
      "description_zh": "按键按下 Enter 时触发"
    },
    {
      "name": "focus",
      "description": "聚焦时触发。详细类型定义。interface SelectInputFocusContext { inputValue: string; tagInputValue?: TagInputValue; e: FocusEvent }",
      "params": "(value: SelectInputValue, context: SelectInputFocusContext)",
      "description_zh": "聚焦时触发。详细类型定义。interface SelectInputFocusContext { inputValue: string; tagInputValue?: TagInputValue; e: FocusEvent }"
    },
    {
      "name": "input-change",
      "description": "输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发等。详细类型定义。interface SelectInputValueChangeContext { e?: Event | InputEvent | MouseEvent | FocusEvent | KeyboardEvent | CompositionEvent; trigger: 'input' | 'clear' | 'blur' | 'focus' | 'initial' | 'change' }",
      "params": "(value: string, context?: SelectInputValueChangeContext)",
      "description_zh": "输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发等。详细类型定义。interface SelectInputValueChangeContext { e?: Event | InputEvent | MouseEvent | FocusEvent | KeyboardEvent | CompositionEvent; trigger: 'input' | 'clear' | 'blur' | 'focus' | 'initial' | 'change' }"
    },
    {
      "name": "mouseenter",
      "description": "进入输入框时触发",
      "params": "(context: { e: MouseEvent })",
      "description_zh": "进入输入框时触发"
    },
    {
      "name": "mouseleave",
      "description": "离开输入框时触发",
      "params": "(context: { e: MouseEvent })",
      "description_zh": "离开输入框时触发"
    },
    {
      "name": "paste",
      "description": "粘贴事件，pasteValue 表示粘贴板的内容",
      "params": "(context: { e: ClipboardEvent; pasteValue: string })",
      "description_zh": "粘贴事件，pasteValue 表示粘贴板的内容"
    },
    {
      "name": "popup-visible-change",
      "description": "下拉框显示或隐藏时触发。详细类型定义。import { PopupVisibleChangeContext } from '@Popup'",
      "params": "(visible: boolean, context: PopupVisibleChangeContext)",
      "description_zh": "下拉框显示或隐藏时触发。详细类型定义。import { PopupVisibleChangeContext } from '@Popup'"
    },
    {
      "name": "tag-change",
      "description": "值变化时触发，参数 context.trigger 表示数据变化的触发来源；context.index 指当前变化项的下标；context.item 指当前变化项；context.e 表示事件参数。详细类型定义。type SelectInputChangeContext = TagInputChangeContext",
      "params": "(value: TagInputValue, context: SelectInputChangeContext)",
      "description_zh": "值变化时触发，参数 context.trigger 表示数据变化的触发来源；context.index 指当前变化项的下标；context.item 指当前变化项；context.e 表示事件参数。详细类型定义。type SelectInputChangeContext = TagInputChangeContext"
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "SelectInput"
}
