{
  "name": "TTreeSelect",
  "props": {
    "autoWidth": {
      "description": "宽度随内容自适应",
      "description_zh": "宽度随内容自适应",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "autofocus": {
      "description": "自动聚焦",
      "description_zh": "自动聚焦",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "borderless": {
      "description": "无边框模式",
      "description_zh": "无边框模式",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "clearable": {
      "description": "是否允许清空",
      "description_zh": "是否允许清空",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "collapsedItems": {
      "description": "多选情况下，用于设置折叠项内容，默认为 +N。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义。value 表示当前存在的所有标签，collapsedSelectedItems 表示折叠的标签，count 表示折叠的数量，onClose 表示移除标签的事件回调。TS 类型：TNode<{ value: DataOption[]; collapsedSelectedItems: DataOption[]; count: number; onClose: (context: { index: number, e?: MouseEvent }) => void }>。通用类型定义",
      "description_zh": "多选情况下，用于设置折叠项内容，默认为 +N。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义。value 表示当前存在的所有标签，collapsedSelectedItems 表示折叠的标签，count 表示折叠的数量，onClose 表示移除标签的事件回调。TS 类型：TNode<{ value: DataOption[]; collapsedSelectedItems: DataOption[]; count: number; onClose: (context: { index: number, e?: MouseEvent }) => void }>。通用类型定义",
      "default": "-",
      "value": "",
      "type": "Slot / Function",
      "required": false,
      "version": ""
    },
    "data": {
      "description": "树选择的数据列表。结构：[{ label: TNode, value: string | number, text: string, ... }]，其中 label 表示选项呈现的内容，可自定义；value 表示选项的唯一值；表示当 label 用于选项复杂内容呈现时，text 用于搜索功能。其中 label 和 value 可以使用 keys 属性定义别名。TS 类型：Array<DataOption>",
      "description_zh": "树选择的数据列表。结构：[{ label: TNode, value: string | number, text: string, ... }]，其中 label 表示选项呈现的内容，可自定义；value 表示选项的唯一值；表示当 label 用于选项复杂内容呈现时，text 用于搜索功能。其中 label 和 value 可以使用 keys 属性定义别名。TS 类型：Array<DataOption>",
      "default": "[]",
      "value": "",
      "type": "Array",
      "required": false,
      "version": ""
    },
    "disabled": {
      "description": "是否禁用组件",
      "description_zh": "是否禁用组件",
      "default": "-",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "empty": {
      "description": "当下拉列表为空时显示的内容。TS 类型：string | TNode。通用类型定义",
      "description_zh": "当下拉列表为空时显示的内容。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "filter": {
      "description": "过滤方法，用于对现有数据进行搜索过滤，判断是否过滤某一项数据。TS 类型：(filterWords: string, option: DataOption) => boolean",
      "description_zh": "过滤方法，用于对现有数据进行搜索过滤，判断是否过滤某一项数据。TS 类型：(filterWords: string, option: DataOption) => boolean",
      "default": "-",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "filterable": {
      "description": "是否可搜索",
      "description_zh": "是否可搜索",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "inputProps": {
      "description": "透传给 输入框 Input 组件的全部属性。TS 类型：InputProps，Input API Documents。详细类型定义",
      "description_zh": "透传给 输入框 Input 组件的全部属性。TS 类型：InputProps，Input API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "inputValue": {
      "description": "输入框的值。支持语法糖 .sync。TS 类型：InputValue，Input API Documents。详细类型定义",
      "description_zh": "输入框的值。支持语法糖 .sync。TS 类型：InputValue，Input API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "String / Number",
      "required": false,
      "version": ""
    },
    "defaultInputValue": {
      "description": "输入框的值。非受控属性。TS 类型：InputValue，Input API Documents。详细类型定义",
      "description_zh": "输入框的值。非受控属性。TS 类型：InputValue，Input API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "String / Number",
      "required": false,
      "version": ""
    },
    "keys": {
      "description": "用来定义 value / label / disabled / children 在 data 数据中对应的字段别名，示例：{ value: 'key', label: 'name', children: 'list' }。TS 类型：TreeKeysType。通用类型定义",
      "description_zh": "用来定义 value / label / disabled / children 在 data 数据中对应的字段别名，示例：{ value: 'key', label: 'name', children: 'list' }。TS 类型：TreeKeysType。通用类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "label": {
      "description": "左侧文本。TS 类型：string | TNode。通用类型定义",
      "description_zh": "左侧文本。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "loading": {
      "description": "是否正在加载数据",
      "description_zh": "是否正在加载数据",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "loadingText": {
      "description": "远程加载时显示的文字，支持自定义。如加上超链接。TS 类型：string | TNode。通用类型定义",
      "description_zh": "远程加载时显示的文字，支持自定义。如加上超链接。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "max": {
      "description": "用于控制多选数量，值为 0 则不限制",
      "description_zh": "用于控制多选数量，值为 0 则不限制",
      "default": "0",
      "value": "",
      "type": "Number",
      "required": false,
      "version": ""
    },
    "minCollapsedNum": {
      "description": "最小折叠数量，用于多选情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠",
      "description_zh": "最小折叠数量，用于多选情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠",
      "default": "0",
      "value": "",
      "type": "Number",
      "required": false,
      "version": ""
    },
    "multiple": {
      "description": "是否允许多选",
      "description_zh": "是否允许多选",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "panelBottomContent": {
      "description": "面板内的底部内容。TS 类型：string | TNode。通用类型定义",
      "description_zh": "面板内的底部内容。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "panelTopContent": {
      "description": "面板内的顶部内容。TS 类型：string | TNode。通用类型定义",
      "description_zh": "面板内的顶部内容。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "placeholder": {
      "description": "占位符",
      "description_zh": "占位符",
      "default": "undefined",
      "value": "",
      "type": "String",
      "required": false,
      "version": ""
    },
    "popupProps": {
      "description": "透传给 popup 组件的全部属性。TS 类型：PopupProps，Popup API Documents。详细类型定义",
      "description_zh": "透传给 popup 组件的全部属性。TS 类型：PopupProps，Popup API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "popupVisible": {
      "description": "是否显示下拉框。支持语法糖 .sync",
      "description_zh": "是否显示下拉框。支持语法糖 .sync",
      "default": "undefined",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "defaultPopupVisible": {
      "description": "是否显示下拉框。非受控属性",
      "description_zh": "是否显示下拉框。非受控属性",
      "default": "undefined",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "prefixIcon": {
      "description": "组件前置图标。TS 类型：TNode。通用类型定义",
      "description_zh": "组件前置图标。TS 类型：TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "Slot / Function",
      "required": false,
      "version": ""
    },
    "readonly": {
      "description": "只读状态，值为真会隐藏输入框，且无法打开下拉框",
      "description_zh": "只读状态，值为真会隐藏输入框，且无法打开下拉框",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "reserveKeyword": {
      "description": "多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词",
      "description_zh": "多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词",
      "default": "false",
      "value": "",
      "type": "Boolean",
      "required": false,
      "version": ""
    },
    "selectInputProps": {
      "description": "【开发中】透传 SelectInput 筛选器输入框组件的全部属性。TS 类型：SelectInputProps，SelectInput API Documents。详细类型定义",
      "description_zh": "【开发中】透传 SelectInput 筛选器输入框组件的全部属性。TS 类型：SelectInputProps，SelectInput API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "size": {
      "description": "尺寸。可选项：small/medium/large",
      "description_zh": "尺寸。可选项：small/medium/large",
      "default": "medium",
      "value": "",
      "type": "String",
      "required": false,
      "version": ""
    },
    "status": {
      "description": "输入框状态。可选项：default/success/warning/error",
      "description_zh": "输入框状态。可选项：default/success/warning/error",
      "default": "default",
      "value": "",
      "type": "String",
      "required": false,
      "version": ""
    },
    "suffix": {
      "description": "后置图标前的后置内容。TS 类型：string | TNode。通用类型定义",
      "description_zh": "后置图标前的后置内容。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "suffixIcon": {
      "description": "组件后置图标。TS 类型：TNode。通用类型定义",
      "description_zh": "组件后置图标。TS 类型：TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "Slot / Function",
      "required": false,
      "version": ""
    },
    "tagProps": {
      "description": "透传 Tag 标签组件全部属性。TS 类型：TagProps，Tag API Documents。详细类型定义",
      "description_zh": "透传 Tag 标签组件全部属性。TS 类型：TagProps，Tag API Documents。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "tips": {
      "description": "输入框下方提示文本，会根据不同的 status 呈现不同的样式。TS 类型：string | TNode。通用类型定义",
      "description_zh": "输入框下方提示文本，会根据不同的 status 呈现不同的样式。TS 类型：string | TNode。通用类型定义",
      "default": "-",
      "value": "",
      "type": "String / Slot / Function",
      "required": false,
      "version": ""
    },
    "treeProps": {
      "description": "透传 Tree 组件的全部属性。TS 类型：TreeProps，Tree API Documents。通用类型定义。详细类型定义",
      "description_zh": "透传 Tree 组件的全部属性。TS 类型：TreeProps，Tree API Documents。通用类型定义。详细类型定义",
      "default": "-",
      "value": "",
      "type": "Object",
      "required": false,
      "version": ""
    },
    "value": {
      "description": "选中值，泛型 TreeValueType 继承自 TreeSelectValue。支持语法糖 v-model。TS 类型：TreeValueType type TreeSelectValue = string | number | TreeOptionData | Array<string | number | TreeOptionData>。通用类型定义。详细类型定义",
      "description_zh": "选中值，泛型 TreeValueType 继承自 TreeSelectValue。支持语法糖 v-model。TS 类型：TreeValueType type TreeSelectValue = string | number | TreeOptionData | Array<string | number | TreeOptionData>。通用类型定义。详细类型定义",
      "default": "-",
      "value": "",
      "type": "String / Number / Object / Array",
      "required": false,
      "version": ""
    },
    "defaultValue": {
      "description": "选中值，泛型 TreeValueType 继承自 TreeSelectValue。非受控属性。TS 类型：TreeValueType type TreeSelectValue = string | number | TreeOptionData | Array<string | number | TreeOptionData>。通用类型定义。详细类型定义",
      "description_zh": "选中值，泛型 TreeValueType 继承自 TreeSelectValue。非受控属性。TS 类型：TreeValueType type TreeSelectValue = string | number | TreeOptionData | Array<string | number | TreeOptionData>。通用类型定义。详细类型定义",
      "default": "-",
      "value": "",
      "type": "String / Number / Object / Array",
      "required": false,
      "version": ""
    },
    "valueDisplay": {
      "description": "自定义选中项呈现方式。TS 类型：string | TNode<{ value: TreeOptionData | TreeOptionData[]; onClose: (index: number) => void }>。通用类型定义",
      "description_zh": "自定义选中项呈现方式。TS 类型：string | TNode<{ value: TreeOptionData | TreeOptionData[]; onClose: (index: number) => void }>。通用类型定义",
      "default": "-",
      "value": "",
      "type": "Slot / Function",
      "required": false,
      "version": ""
    },
    "valueType": {
      "description": "用于控制选中值的类型。假设数据选项为：[{ label: '姓名', value: 'name' }]，value 表示值仅返回数据选项中的 value， object 表示值返回全部数据。可选项：value/object",
      "description_zh": "用于控制选中值的类型。假设数据选项为：[{ label: '姓名', value: 'name' }]，value 表示值仅返回数据选项中的 value， object 表示值返回全部数据。可选项：value/object",
      "default": "value",
      "value": "",
      "type": "String",
      "required": false,
      "version": ""
    },
    "onBlur": {
      "description": "TS 类型：(context: SelectInputBlurContext & { value: TreeSelectValue }) => void输入框失去焦点时触发",
      "description_zh": "TS 类型：(context: SelectInputBlurContext & { value: TreeSelectValue }) => void输入框失去焦点时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onChange": {
      "description": "TS 类型：(value: TreeValueType, context: TreeSelectChangeContext<DataOption>) => void节点选中状态变化时触发，context.node 表示当前变化的选项，context. trigger 表示触发变化的来源。泛型 TreeValueType 继承自 TreeSelectValue 。详细类型定义。interface TreeSelectChangeContext<DataOption> { node: TreeNodeModel<DataOption>; data: DataOption; index?: number; trigger: TreeSelectValueChangeTrigger; e?: MouseEvent | KeyboardEvent | Event }type TreeSelectValueChangeTrigger = 'clear' | 'tag-remove' | 'backspace' | 'check' | 'uncheck'",
      "description_zh": "TS 类型：(value: TreeValueType, context: TreeSelectChangeContext<DataOption>) => void节点选中状态变化时触发，context.node 表示当前变化的选项，context. trigger 表示触发变化的来源。泛型 TreeValueType 继承自 TreeSelectValue 。详细类型定义。interface TreeSelectChangeContext<DataOption> { node: TreeNodeModel<DataOption>; data: DataOption; index?: number; trigger: TreeSelectValueChangeTrigger; e?: MouseEvent | KeyboardEvent | Event }type TreeSelectValueChangeTrigger = 'clear' | 'tag-remove' | 'backspace' | 'check' | 'uncheck'",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onClear": {
      "description": "TS 类型：(context: { e: MouseEvent }) => void点击清除按钮时触发",
      "description_zh": "TS 类型：(context: { e: MouseEvent }) => void点击清除按钮时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onEnter": {
      "description": "TS 类型：(context: { inputValue: string; e: KeyboardEvent; value: TreeValueType }) => void回车键按下时触发。inputValue 表示输入框的值，value 表示选中值。泛型 TreeValueType 继承 TreeSelectValue",
      "description_zh": "TS 类型：(context: { inputValue: string; e: KeyboardEvent; value: TreeValueType }) => void回车键按下时触发。inputValue 表示输入框的值，value 表示选中值。泛型 TreeValueType 继承 TreeSelectValue",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onFocus": {
      "description": "TS 类型：(context: { value: TreeSelectValue; e: FocusEvent }) => void输入框获得焦点时触发",
      "description_zh": "TS 类型：(context: { value: TreeSelectValue; e: FocusEvent }) => void输入框获得焦点时触发",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onInputChange": {
      "description": "TS 类型：(value: InputValue, context: SelectInputValueChangeContext) => void输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发、失去焦点等",
      "description_zh": "TS 类型：(value: InputValue, context: SelectInputValueChangeContext) => void输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发、失去焦点等",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onPopupVisibleChange": {
      "description": "TS 类型：(visible: boolean, context: TreeSelectPopupVisibleContext<DataOption>) => void下拉框显示或隐藏时触发。单选场景，选中某个选项时触发关闭，此时需要添加参数 node。详细类型定义。import { PopupVisibleChangeContext, PopupTriggerEvent, PopupTriggerSource } from '@Popup'interface TreeSelectPopupVisibleContext<T> { e?: PopupTriggerEvent | Event; node?: TreeNodeModel<T>; trigger?: PopupTriggerSource | 'clear'; }",
      "description_zh": "TS 类型：(visible: boolean, context: TreeSelectPopupVisibleContext<DataOption>) => void下拉框显示或隐藏时触发。单选场景，选中某个选项时触发关闭，此时需要添加参数 node。详细类型定义。import { PopupVisibleChangeContext, PopupTriggerEvent, PopupTriggerSource } from '@Popup'interface TreeSelectPopupVisibleContext<T> { e?: PopupTriggerEvent | Event; node?: TreeNodeModel<T>; trigger?: PopupTriggerSource | 'clear'; }",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onRemove": {
      "description": "TS 类型：(options: RemoveOptions<DataOption, TreeValueType>) => void多选模式下，选中数据被移除时触发。详细类型定义。export interface RemoveOptions<T extends TreeOptionData = TreeOptionData, N extends TreeSelectValue = TreeSelectValue> { value: N; data: T; index: number; node: TreeNodeModel<T>; e?: MouseEvent | KeyboardEvent; trigger: 'tag-remove' | 'backspace'; }",
      "description_zh": "TS 类型：(options: RemoveOptions<DataOption, TreeValueType>) => void多选模式下，选中数据被移除时触发。详细类型定义。export interface RemoveOptions<T extends TreeOptionData = TreeOptionData, N extends TreeSelectValue = TreeSelectValue> { value: N; data: T; index: number; node: TreeNodeModel<T>; e?: MouseEvent | KeyboardEvent; trigger: 'tag-remove' | 'backspace'; }",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    },
    "onSearch": {
      "description": "TS 类型：(filterWords: string, context: { e: KeyboardEvent | SelectInputValueChangeContext['e'] }) => void输入值变化时，触发搜索事件。主要用于远程搜索新数据。设置 filterable=true 开启此功能。优先级高于本地数据搜索 filter，即一旦存在这个远程搜索事件 filter 失效",
      "description_zh": "TS 类型：(filterWords: string, context: { e: KeyboardEvent | SelectInputValueChangeContext['e'] }) => void输入值变化时，触发搜索事件。主要用于远程搜索新数据。设置 filterable=true 开启此功能。优先级高于本地数据搜索 filter，即一旦存在这个远程搜索事件 filter 失效",
      "default": "",
      "value": "",
      "type": "Function",
      "required": false,
      "version": ""
    }
  },
  "link": "https://tdesign.tencent.com/vue/components/tree-select",
  "link_zh": "https://tdesign.tencent.com/vue/components/tree-select",
  "typeDetail": {},
  "events": [
    {
      "name": "blur",
      "description": "输入框失去焦点时触发",
      "params": "(context: SelectInputBlurContext & { value: TreeSelectValue })",
      "description_zh": "输入框失去焦点时触发"
    },
    {
      "name": "change",
      "description": "节点选中状态变化时触发，context.node 表示当前变化的选项，context. trigger 表示触发变化的来源。泛型 TreeValueType 继承自 TreeSelectValue 。详细类型定义。interface TreeSelectChangeContext<DataOption> { node: TreeNodeModel<DataOption>; data: DataOption; index?: number; trigger: TreeSelectValueChangeTrigger; e?: MouseEvent | KeyboardEvent | Event }type TreeSelectValueChangeTrigger = 'clear' | 'tag-remove' | 'backspace' | 'check' | 'uncheck'",
      "params": "(value: TreeValueType, context: TreeSelectChangeContext<DataOption>)",
      "description_zh": "节点选中状态变化时触发，context.node 表示当前变化的选项，context. trigger 表示触发变化的来源。泛型 TreeValueType 继承自 TreeSelectValue 。详细类型定义。interface TreeSelectChangeContext<DataOption> { node: TreeNodeModel<DataOption>; data: DataOption; index?: number; trigger: TreeSelectValueChangeTrigger; e?: MouseEvent | KeyboardEvent | Event }type TreeSelectValueChangeTrigger = 'clear' | 'tag-remove' | 'backspace' | 'check' | 'uncheck'"
    },
    {
      "name": "clear",
      "description": "点击清除按钮时触发",
      "params": "(context: { e: MouseEvent })",
      "description_zh": "点击清除按钮时触发"
    },
    {
      "name": "enter",
      "description": "回车键按下时触发。inputValue 表示输入框的值，value 表示选中值。泛型 TreeValueType 继承 TreeSelectValue",
      "params": "(context: { inputValue: string; e: KeyboardEvent; value: TreeValueType })",
      "description_zh": "回车键按下时触发。inputValue 表示输入框的值，value 表示选中值。泛型 TreeValueType 继承 TreeSelectValue"
    },
    {
      "name": "focus",
      "description": "输入框获得焦点时触发",
      "params": "(context: { value: TreeSelectValue; e: FocusEvent })",
      "description_zh": "输入框获得焦点时触发"
    },
    {
      "name": "input-change",
      "description": "输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发、失去焦点等",
      "params": "(value: InputValue, context: SelectInputValueChangeContext)",
      "description_zh": "输入框值发生变化时触发，context.trigger 表示触发输入框值变化的来源：文本输入触发、清除按钮触发、失去焦点等"
    },
    {
      "name": "popup-visible-change",
      "description": "下拉框显示或隐藏时触发。单选场景，选中某个选项时触发关闭，此时需要添加参数 node。详细类型定义。import { PopupVisibleChangeContext, PopupTriggerEvent, PopupTriggerSource } from '@Popup'interface TreeSelectPopupVisibleContext<T> { e?: PopupTriggerEvent | Event; node?: TreeNodeModel<T>; trigger?: PopupTriggerSource | 'clear'; }",
      "params": "(visible: boolean, context: TreeSelectPopupVisibleContext<DataOption>)",
      "description_zh": "下拉框显示或隐藏时触发。单选场景，选中某个选项时触发关闭，此时需要添加参数 node。详细类型定义。import { PopupVisibleChangeContext, PopupTriggerEvent, PopupTriggerSource } from '@Popup'interface TreeSelectPopupVisibleContext<T> { e?: PopupTriggerEvent | Event; node?: TreeNodeModel<T>; trigger?: PopupTriggerSource | 'clear'; }"
    },
    {
      "name": "remove",
      "description": "多选模式下，选中数据被移除时触发。详细类型定义。export interface RemoveOptions<T extends TreeOptionData = TreeOptionData, N extends TreeSelectValue = TreeSelectValue> { value: N; data: T; index: number; node: TreeNodeModel<T>; e?: MouseEvent | KeyboardEvent; trigger: 'tag-remove' | 'backspace'; }",
      "params": "(options: RemoveOptions<DataOption, TreeValueType>)",
      "description_zh": "多选模式下，选中数据被移除时触发。详细类型定义。export interface RemoveOptions<T extends TreeOptionData = TreeOptionData, N extends TreeSelectValue = TreeSelectValue> { value: N; data: T; index: number; node: TreeNodeModel<T>; e?: MouseEvent | KeyboardEvent; trigger: 'tag-remove' | 'backspace'; }"
    },
    {
      "name": "search",
      "description": "输入值变化时，触发搜索事件。主要用于远程搜索新数据。设置 filterable=true 开启此功能。优先级高于本地数据搜索 filter，即一旦存在这个远程搜索事件 filter 失效",
      "params": "(filterWords: string, context: { e: KeyboardEvent | SelectInputValueChangeContext['e'] })",
      "description_zh": "输入值变化时，触发搜索事件。主要用于远程搜索新数据。设置 filterable=true 开启此功能。优先级高于本地数据搜索 filter，即一旦存在这个远程搜索事件 filter 失效"
    }
  ],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "TreeSelect"
}
